{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\React FrontEnd Challenges\\\\indiebrew\\\\src\\\\FormControl.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Map from './map/Map';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormControl = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [userId, setUserId] = useState();\n  const [body, setBody] = useState('');\n  const [title, setTitle] = useState(''); // const [geo, setGeo] = useState({})\n\n  useEffect(async () => {\n    const getUser = async () => {\n      await fetch('https://jsonplaceholder.typicode.com/users').then(d => d.json()).then(d => setUsers(d));\n    };\n\n    getUser();\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: \"post\",\n      body: JSON.stringify({\n        title,\n        body,\n        userId\n      })\n    }).then(d => console.log(d));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Form Control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setUserId(e.target.value),\n        value: userId,\n        children: users.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: d.id,\n          children: d.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 28\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"body\",\n        children: \"Body:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"body\",\n        name: \"body\",\n        value: body,\n        onChange: e => setBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 104\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 108\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 114\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      lng: 12,\n      lat: 12\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 8\n  }, this);\n};\n\n_s(FormControl, \"qeaPIiPTdkEd7B6DofwemT3PZXU=\");\n\n_c = FormControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormControl\");","map":{"version":3,"sources":["C:/Users/ASUS/Documents/React FrontEnd Challenges/indiebrew/src/FormControl.js"],"names":["React","useState","useEffect","Map","FormControl","users","setUsers","userId","setUserId","body","setBody","title","setTitle","getUser","fetch","then","d","json","handleSubmit","e","preventDefault","method","JSON","stringify","console","log","target","value","map","id","name"],"mappings":"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","sourcesContent":["\r\nimport React, {useState, useEffect} from 'react'\r\nimport Map from './map/Map'\r\nimport './form.css'\r\n\r\n\r\n\r\nconst FormControl = () =>  {\r\n  const [users, setUsers] = useState([])\r\n  const [userId, setUserId] = useState()\r\n  const [body, setBody] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  // const [geo, setGeo] = useState({})\r\n\r\n\r\n\r\n\r\n  useEffect(async ()=> {\r\n    const getUser =  async () => {\r\n      await fetch('https://jsonplaceholder.typicode.com/users').then(d => d.json()).then(d => setUsers(d))\r\n    }\r\n\r\n    getUser()\r\n  }, [])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n      await fetch('https://jsonplaceholder.typicode.com/posts', {\r\n        method: \"post\", \r\n        body: JSON.stringify({title, body, userId})\r\n      }).then(d => console.log(d))\r\n\r\n  }\r\n\r\n\r\n  return (\r\n       <div className='form' >\r\n    <form >\r\n        <h2>Form Control</h2>\r\n\r\n        <select onChange={e => setUserId(e.target.value)} value={userId}>\r\n          {\r\n            users.map(d => <option value={d.id}>{d.name}</option>)\r\n          }\r\n        </select> <br />\r\n\r\n        <label htmlFor=\"body\">Body:</label><br />\r\n        <input type=\"text\" id=\"body\" name=\"body\" value={body} onChange={e => setBody(e.target.value)}/><br />\r\n        <label htmlFor=\"title\">title:</label><br />\r\n        <input type=\"text\" id=\"title\" name=\"title\" value={title} onChange={e => setTitle(e.target.value)}/><br /><br />\r\n        <button type='submit' onClick={handleSubmit}>Submit</button>\r\n\r\n      </form>\r\n\r\n      <Map lng={12} lat={12}/>\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}