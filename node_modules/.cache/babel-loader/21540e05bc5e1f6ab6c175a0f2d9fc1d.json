{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\React FrontEnd Challenges\\\\indiebrew\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport MovieCard from \"./components/MovieCard\";\nimport \"./App.css\";\nimport { Typography } from \"antd\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://www.omdbapi.com?apikey=b6003d8a\";\n\nfunction App() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    searchMovies(\"Batman\");\n  }, []);\n\n  const searchMovies = async title => {\n    const data = await axios.get(`${API_URL}&s=${title}`); // const data = await response.json();\n\n    if (data) {\n      console.log(data.data.Search);\n      setMovies(data.data.Search);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-bar\",\n        placeholder: \"search Movie here\",\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(SearchOutlined, {\n          className: \"icons\",\n          onClick: () => searchMovies(searchTerm)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movielist\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nodata\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"greenyellow\"\n        },\n        children: \"No Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"k8BJwj14FtN/55shQ4GOCwIRzXA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ASUS/Documents/React FrontEnd Challenges/indiebrew/src/App.js"],"names":["React","useState","useEffect","SearchOutlined","MovieCard","Typography","axios","API_URL","App","searchTerm","setSearchTerm","movies","setMovies","searchMovies","title","data","get","console","log","Search","e","target","value","length","map","movie","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,OAAO,GAAG,wCAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAAC,QAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC,UAAMC,IAAI,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAET,OAAQ,MAAKO,KAAM,EAAhC,CAAnB,CADoC,CAEpC;;AACA,QAAGC,IAAH,EAAQ;AAACE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAL,CAAUI,MAAtB;AACTP,MAAAA,SAAS,CAACG,IAAI,CAACA,IAAL,CAAUI,MAAX,CAAT;AACC;AACF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADA,eAGE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,YAFZ;AAGE,QAAA,WAAW,EAAC,mBAHd;AAIE,QAAA,QAAQ,EAAGC,CAAD,IAAOV,aAAa,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,cADF,eAOG;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACC,QAAC,cAAD;AACE,UAAA,SAAS,EAAC,OADZ;AAEE,UAAA,OAAO,EAAE,MAAMT,YAAY,CAACJ,UAAD;AAF7B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAkBGE,MAAM,CAACY,MAAP,GAAgB,CAAhB,gBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAEEZ,MAAM,CAACa,GAAP,CAAYC,KAAD,iBAAW,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAAtB;AAFF;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAhDQlB,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport MovieCard from \"./components/MovieCard\";\r\nimport \"./App.css\";\r\nimport { Typography } from \"antd\";\r\nimport axios from \"axios\";\r\nconst API_URL = \"http://www.omdbapi.com?apikey=b6003d8a\";\r\n\r\nfunction App() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    searchMovies(\"Batman\");\r\n  }, []);\r\n\r\n  const searchMovies = async (title) => {\r\n    const data = await axios.get(`${API_URL}&s=${title}`);\r\n    // const data = await response.json();\r\n    if(data){console.log(data.data.Search)\r\n    setMovies(data.data.Search);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n    <div className=\"typo\"></div>\r\n      \r\n      <div className=\"search\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"search-bar\"\r\n          placeholder=\"search Movie here\"\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n         <div className=\"icon\">\r\n          <SearchOutlined\r\n            className=\"icons\"\r\n            onClick={() => searchMovies(searchTerm)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {movies.length > 0 ? (\r\n        <div className=\"movielist\">\r\n        {\r\n          movies.map((movie) => <MovieCard movie={movie} />)\r\n        }\r\n        </div>\r\n      ) : (\r\n        <div className=\"nodata\">\r\n          <h1 style={{ color: \"greenyellow\" }}>No Movies</h1>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}