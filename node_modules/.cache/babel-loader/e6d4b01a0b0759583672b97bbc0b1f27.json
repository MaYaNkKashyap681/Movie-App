{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\React FrontEnd Challenges\\\\indiebrew\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { SearchOutlined } from '@ant-design/icons';\nimport MovieCard from './components/MovieCard';\nimport './App.css';\nimport { Typography } from 'antd';\nimport axios from 'axios';\nimport Movies from './components/Movies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://www.omdbapi.com?apikey=b6003d8a\";\n\nfunction App() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    searchMovies(\"Batman\");\n  }, []);\n\n  const searchMovies = async title => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n    setMovies(data.Search);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      level: 2,\n      style: {\n        color: \"goldenrod\",\n        fontSize: \"6rem\",\n        textAlign: \"center\"\n      },\n      children: \"MovieVilla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(SearchOutlined, {\n          className: \"icons\",\n          onClick: () => searchMovies(searchTerm)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-bar\",\n        placeholder: \"search Movie here\",\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movielist\",\n      children: [\"movies.map((movie) => \", /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 31\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"greenyellow\"\n      },\n      children: \"No Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"k8BJwj14FtN/55shQ4GOCwIRzXA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ASUS/Documents/React FrontEnd Challenges/indiebrew/src/App.js"],"names":["React","useState","useEffect","SearchOutlined","MovieCard","Typography","axios","Movies","API_URL","App","searchTerm","setSearchTerm","movies","setMovies","searchMovies","title","response","fetch","data","json","Search","color","fontSize","textAlign","e","target","value","length","movie"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AACA,MAAMC,OAAO,GAAG,wCAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAGb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,YAAY,CAAC,QAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,MAAKO,KAAM,EAAvB,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAN,IAAAA,SAAS,CAACK,IAAI,CAACE,MAAN,CAAT;AACD,GALD;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAI,CAArB;AACA,MAAA,KAAK,EAAI;AAACC,QAAAA,KAAK,EAAE,WAAR;AACTC,QAAAA,QAAQ,EAAE,MADD;AACSC,QAAAA,SAAS,EAAE;AADpB,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIG;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAC,OAA1B;AACL,UAAA,OAAO,EAAE,MAAMT,YAAY,CAACJ,UAAD;AADtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,SAAS,EAAC,YAA/B;AACE,QAAA,WAAW,EAAC,mBADd;AAEE,QAAA,QAAQ,EAAGc,CAAD,IAAOb,aAAa,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAFhC;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJH,EAgBGd,MAAM,CAACe,MAAP,GAAgB,CAAhB,gBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,wDACsB,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEC,KAAK,CAACV;AAAxB;AAAA;AAAA;AAAA;AAAA,cADtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAKC;AAAI,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA7CQZ,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport {SearchOutlined} from '@ant-design/icons'\r\nimport MovieCard from './components/MovieCard'\r\nimport './App.css'\r\nimport { Typography } from 'antd'\r\nimport axios from 'axios'\r\nimport Movies from './components/Movies'\r\nconst API_URL = \"http://www.omdbapi.com?apikey=b6003d8a\";\r\n\r\nfunction App() {\r\n\r\n    \r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    searchMovies(\"Batman\");\r\n  }, []);\r\n\r\n  const searchMovies = async (title) => {\r\n    const response = await fetch(`${API_URL}&s=${title}`);\r\n    const data = await response.json();\r\n\r\n    setMovies(data.Search);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='app'>\r\n      <Typography level = {2}\r\n      style = {{color: \"goldenrod\",\r\n      fontSize: \"6rem\", textAlign: \"center\"}}>MovieVilla</Typography>\r\n       <div className='search'>\r\n           <div className='icon'>\r\n               <SearchOutlined className='icons'\r\n          onClick={() => searchMovies(searchTerm)}\r\n               />\r\n           </div>\r\n           <input type = \"text\" className='search-bar'\r\n             placeholder='search Movie here'\r\n             onChange={(e) => setSearchTerm(e.target.value)}\r\n           />\r\n       </div>\r\n      \r\n      {movies.length > 0 ? (\r\n        <div className=\"movielist\">\r\n        movies.map((movie) => <MovieCard movie={movie.data} />)\r\n        </div>\r\n      ) : (\r\n        <h1 style={{ color: \"greenyellow\" }}>No Movies</h1>\r\n      )}\r\n   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}